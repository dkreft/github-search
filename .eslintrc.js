/* eslint max-lines: "off" */

module.exports = {
  ignorePatterns: [
    'node_modules/',
    'build/',
  ],
  env: {
    browser: true,
    es6: true,
    node: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react-perf/recommended',
  ],
  globals: {
    React: 'writable',
  },
  parser: 'babel-eslint',
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 2018,
    sourceType: 'module',
  },
  plugins: [
    'import',
    'react',
    'react-hooks',
    'react-perf',
  ],
  rules: {
    'accessor-pairs': 'error',
    'array-bracket-newline': [2, 'consistent'],
    'array-bracket-spacing': 'off',
    'array-callback-return': 'error',
    'array-element-newline': [2, 'consistent'],
    'arrow-body-style': 'off',
    'arrow-parens': [
      'error',
      'always',
    ],
    'arrow-spacing': [
      'error',
      {
        after: true,
        before: true,
      },
    ],
    'block-scoped-var': 'error',
    'block-spacing': 'error',
    'brace-style': [
      'error',
      '1tbs',
    ],
    'callback-return': 'error',
    'camelcase': 'error',
    'capitalized-comments': 'off',
    'class-methods-use-this': 'error',
    'comma-dangle': [2, 'only-multiline'],
    'comma-spacing': [
      'error',
      {
        after: true,
        before: false,
      },
    ],
    'comma-style': [
      'error',
      'last',
    ],
    'complexity': 'error',
    'computed-property-spacing': [
      'error',
      'never',
    ],
    'consistent-return': 'off',
    'consistent-this': 'error',
    'curly': 'error',
    'default-case': 'error',
    'dot-location': [
      'error',
      'property',
    ],
    'dot-notation': 'error',
    'eol-last': 'error',
    'eqeqeq': [
      2,
      'always',
      {
        null: 'ignore',
      },
    ],
    'func-call-spacing': 'error',
    'func-name-matching': 'error',
    'func-names': 'error',
    'func-style': [
      'error',
      'declaration',
      {
        allowArrowFunctions: true,
      }
    ],
    'function-paren-newline': [
      'error',
      'consistent',
    ],
    'generator-star-spacing': [
      'error',
      'after',
    ],
    'global-require': 'error',
    'guard-for-in': 'error',
    'handle-callback-err': 'error',
    'id-blacklist': 'error',
    'id-length': [
      'error',
      {
        exceptions: [
          'e',
          'i',
          '_',
        ],
      },
    ],
    'id-match': 'error',
    'implicit-arrow-linebreak': [
      'error',
      'beside',
    ],
    'import/no-unresolved': 'error',
    'import/order': [
      'error',
      {
        'newlines-between': 'always-and-inside-groups',
        'groups': [
          'builtin',
          'external',
          'internal',
          'parent',
          ['sibling', 'index'],
        ],
      },
    ],
    'indent': [
      'error',
      2,
      {
        ArrayExpression: 'first',
        CallExpression: {
          arguments: 'first',
        },
        SwitchCase: 1,
      },
    ],
    'indent-legacy': 'off',
    'init-declarations': 'off',
    'jsx-quotes': 'error',
    'key-spacing': 'error',
    'keyword-spacing': [
      'error',
      {
        after: true,
        before: true,
      },
    ],
    'line-comment-position': 'error',
    'linebreak-style': [
      'error',
      'unix',
    ],
    'lines-around-comment': 'off',
    'lines-around-directive': 'error',
    'lines-between-class-members': 'error',
    'max-classes-per-file': 'error',
    'max-depth': 'error',
    'max-len': 'off',
    'max-lines': [
      'warn',
      {
        max: 200,
        skipComments: true,
      },
    ],
    'max-lines-per-function': [
      'warn',
      {
        max: 175,
      }
    ],
    'max-nested-callbacks': 'error',
    'max-params': 'error',
    'max-statements': 'off',
    'max-statements-per-line': 'error',
    'multiline-comment-style': [
      'error',
      'separate-lines',
    ],
    'new-cap': 'error',
    'new-parens': 'error',
    'newline-after-var': 'off',
    'newline-before-return': 'off',
    'newline-per-chained-call': 'error',
    'no-alert': 'error',
    'no-array-constructor': 'error',
    'no-async-promise-executor': 'error',
    'no-await-in-loop': 'error',
    'no-bitwise': 'error',
    'no-buffer-constructor': 'error',
    'no-caller': 'error',
    'no-catch-shadow': 'error',
    'no-confusing-arrow': 'error',
    'no-continue': 'error',
    'no-div-regex': 'error',
    'no-duplicate-imports': 'error',
    'no-else-return': 'error',
    'no-empty-function': 'error',
    'no-eq-null': 'off',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-extra-label': 'error',
    'no-extra-parens': 'off',
    'no-floating-decimal': 'error',
    'no-implicit-coercion': 'error',
    'no-implicit-globals': 'error',
    'no-implied-eval': 'error',
    'no-inline-comments': 'error',
    // see @babel/no-invalid-this
    'no-invalid-this': 'error',
    'no-iterator': 'error',
    'no-label-var': 'error',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    'no-lonely-if': 'error',
    'no-loop-func': 'error',
    'no-magic-numbers': 'off',
    'no-misleading-character-class': 'error',
    'no-mixed-operators': 'error',
    'no-mixed-requires': 'error',
    'no-multi-assign': 'error',
    'no-multi-spaces': 'error',
    'no-multi-str': 'error',
    'no-multiple-empty-lines': 'error',
    'no-native-reassign': 'error',
    'no-negated-condition': 'error',
    'no-negated-in-lhs': 'error',
    'no-nested-ternary': 'error',
    'no-new': 'error',
    'no-new-func': 'error',
    'no-new-object': 'error',
    'no-new-require': 'error',
    'no-new-wrappers': 'error',
    'no-octal-escape': 'error',
    'no-param-reassign': 'error',
    'no-path-concat': 'error',
    'no-plusplus': 'error',
    'no-process-env': 'error',
    'no-process-exit': 'error',
    'no-proto': 'error',
    'no-prototype-builtins': 'error',
    'no-restricted-globals': 'error',
    'no-restricted-imports': 'error',
    'no-restricted-modules': 'error',
    'no-restricted-properties': 'error',
    'no-restricted-syntax': 'error',
    'no-return-assign': 'error',
    'no-return-await': 'error',
    'no-script-url': 'error',
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-shadow': 'error',
    'no-shadow-restricted-names': 'error',
    'no-spaced-func': 'error',
    'no-sync': 'error',
    'no-tabs': 'error',
    'no-template-curly-in-string': 'error',
    'no-ternary': 'off',
    'no-throw-literal': 'error',
    'no-trailing-spaces': 'error',
    'no-undef-init': 'error',
    'no-undefined': 'error',
    'no-underscore-dangle': 'off',
    'no-unmodified-loop-condition': 'error',
    'no-unneeded-ternary': 'error',
    'no-unused-expressions': 'error',
    'no-unused-vars': [
      'error',
      { args: 'none' },
    ],
    'no-use-before-define': 'off',
    'no-useless-call': 'error',
    'no-useless-computed-key': 'error',
    'no-useless-concat': 'error',
    'no-useless-constructor': 'error',
    'no-useless-rename': 'error',
    'no-useless-return': 'error',
    'no-var': 'error',
    'no-void': 'off',
    'no-warning-comments': 'off',
    'no-whitespace-before-property': 'error',
    'no-with': 'error',
    'nonblock-statement-body-position': 'error',
    'object-curly-newline': 'error',
    'object-curly-spacing': [
      'error',
      'always',
    ],
    'object-property-newline': 'error',
    'object-shorthand': 'error',
    'one-var': [2, 'never'],
    'one-var-declaration-per-line': 'error',
    'operator-assignment': 'error',
    'operator-linebreak': 'error',
    'padded-blocks': 'off',
    'padding-line-between-statements': 'error',
    'prefer-arrow-callback': 'error',
    'prefer-const': 'error',
    'prefer-destructuring': 'off',
    'prefer-numeric-literals': 'error',
    'prefer-object-spread': 'error',
    'prefer-promise-reject-errors': 'error',
    'prefer-reflect': 'off',
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    'quote-props': [2, 'consistent-as-needed'],
    'quotes': [
      'error',
      'single',
    ],
    'radix': 'error',
    'react/jsx-indent-props': [2, 2],
    'react/jsx-no-bind': 'off',
    'react/jsx-uses-react': 2,
    'react/jsx-uses-vars': 2,
    'react/react-in-jsx-scope': 'off',
    'react/jsx-filename-extension': [1, {
      extensions: ['.jsx'],
    }],
    'react/jsx-curly-spacing': [2, {
      when: 'always',
    }],
    'react/no-unescaped-entities': [
      'error',
      {
        forbid: [
          {
            char: '>',
            alternatives: ['&gt;'],
          },
          {
            char: '<',
            alternatives: ['&lt;'],
          },
          {
            char: '}',
            alternatives: ['&#125;']
          },
          {
            char: '\'',
            alternatives: ['&apos;']
          },
          {
            char: '"',
            alternatives: ['&quot;']
          },
        ],
      },
    ],
    'react-hooks/exhaustive-deps': 'error',
    'react-perf/jsx-no-new-function-as-prop': 'off',
    'require-atomic-updates': 'error',
    'require-await': 'error',
    'require-jsdoc': 'off',
    'require-unicode-regexp': 'off',
    'rest-spread-spacing': [
      'error',
      'never',
    ],
    'semi': 'off',
    'semi-spacing': 'error',
    'semi-style': 'error',
    'sort-imports': 'off',
    'sort-keys': 'off',
    'sort-vars': 'error',
    'space-before-blocks': 'error',
    'space-before-function-paren': 'off',
    'space-in-parens': 'off',
    'space-infix-ops': 'error',
    'space-unary-ops': 'error',
    'spaced-comment': [
      'error',
      'always',
    ],
    'strict': 'error',
    'switch-colon-spacing': 'error',
    'symbol-description': 'error',
    'template-curly-spacing': [
      'error',
      'always',
    ],
    'template-tag-spacing': 'error',
    'unicode-bom': [
      'error',
      'never',
    ],
    'valid-jsdoc': [
      'error',
      {
        prefer: {
          return: 'returns',
        },
        preferType: {
          object: 'Object',
          string: 'String',
          boolean: 'Boolean',
          number: 'Number',
          array: 'Array',
        },
        requireReturn: false,
        requireParamDescription: false,
        requireReturnDescription: false,
      },
    ],
    'vars-on-top': 'error',
    'wrap-iife': 'error',
    'wrap-regex': 'error',
    'yield-star-spacing': 'error',
    'yoda': [
      'error',
      'never',
    ],
  },
  settings: {
    'import/resolver': {
      node: {
        paths: ['src'],
        extensions: [
          '.js',
          '.jsx',
          '.sass',
        ],
      },
    },
    'react': {
      version: 'detect',
    },
  },
  overrides: [
    {
      files: [
        '**/**.test.js?(x)',
      ],
      rules: {
        'camelcase': 'off',
        'id-length': 'off',
        'global-require': 'off',
        'max-lines': 'off',
        'max-lines-per-function': 'off',
        'max-nested-callbacks': 'off',
        'new-cap': 'off',
        'no-empty-function': 'off',
        'no-undef': 'off',
        'no-implicit-globals': 'off',
        'no-process-env': 'off',
        'no-unused-expressions': 'off',
        'react/display-name': 'off',
        'react/jsx-no-undef': 'off',
        'react-perf/jsx-no-new-array-as-prop': 'off',
        'react-perf/jsx-no-new-object-as-prop': 'off',
        'valid-jsdoc': 'off',
      },
    },
  ],
}
